functions {
	matrix admixed_covariance(int N, vector nugget, vector sampleSize) {
		matrix[N,N] Sigma;
		Sigma <- rep_matrix(0,N,N);
		for(i in 1:N){
			Sigma[i,i] <- nugget[i] + 1/sampleSize[i];
		}
		return Sigma;
	}
}
data {
	int<lower=1> K;		  				// number of clusters
	int<lower=2> N; 	  				// number of samples
	int<lower=N+1> L;	    			// number of loci
	cov_matrix[N-1] obsSigma; 			// observed projected covariance
	matrix[N, N] geoDist; 				// matrix of pairwise geographic distance 
	matrix[N, N-1] projMat;				// projection matrix
	vector[N] sampleSize;				// number of genotyped chromosomes in each sample
}
parameters {
  	vector<lower=0>[N] nugget; 				// sample-specific variance (allele sampling error + sample-specific drift)
}
transformed parameters {
	matrix[N-1, N-1]  projSigma;			// the mean-centered and projected covariance matrix (dim = N-1 x N-1)
	cov_matrix[N] Sigma;					// this specifies the parametric, admixed covariance matrix
	Sigma <- admixed_covariance(N, nugget, sampleSize);
	projSigma <- quad_form(Sigma, projMat);
}
model {
	nugget ~ uniform(0,100);									// prior on nugget
	obsSigma ~ wishart(L,projSigma);							// likelihood function	
}
